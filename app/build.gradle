//Top-level buildscript information
buildscript {
    repositories {
        jcenter()
        mavenCentral()
        google()
        maven {
            url "https://jitpack.io"
        }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.2'
        classpath 'org.codehaus.groovy:groovy-android-gradle-plugin:2.0.1'
    }

}

//task pushDownJdkDependency {
//    def imlFile = file("app.iml")
//    println 'Change new.iml order'
//    try {
//        def parsedXml = (new XmlParser()).parse(imlFile)
//        def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
//        parsedXml.component[1].remove(jdkNode)
//        new Node(parsedXml.component[1], 'orderEntry', ['type': 'jdk', 'jdkName': "Android API 23 Platform", 'jdkType': 'Android SDK'])
//        def writer = new StringWriter()
//        new XmlNodePrinter(new PrintWriter(writer)).print(parsedXml)
//        writer.toString()
//        //imlFile.text = writer.toString()
//
//    } catch (GradleException e) {
//        logger.log(e)
//        // nop, iml not found
//    }
//}

gradle.projectsEvaluated {
    //preBuild.dependsOn(brandCopy)
//    preBuild.dependsOn(pushDownJdkDependency)

    tasks.withType(JavaCompile) {
        options.compilerArgs.add('-Xbootclasspath/p:system_libraries/framework.jar')
    }
}
//App module build information
apply plugin: 'com.android.application'

android {
    signingConfigs {
        config {
            keyAlias 'ent'
            keyPassword '6hvk7rUj3V'
            storeFile file('/home/vladimir/wrk/ent.jks')
            storePassword '6hvk7rUj3V'
        }
    }
    compileSdkVersion 26
    //buildToolsVersion "27.0.3"
//    buildToolsVersion "28.0.0"
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        ignoreWarnings true //false
    }
    defaultConfig {
        //renderscriptTargetApi 23
        minSdkVersion 23
        targetSdkVersion 26
//        ndk {
//            moduleName "libjni_snapcammosaic"
//        }

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -lz -fopenmp  -frtti -O3 -I" + file("cpp/include").absolutePath
                //arguments '-DANDROID_TOOLCHAIN=gcc' '-DANDROID_STL=gnustl_static'
                arguments '-DANDROID_STL=gnustl_static'

                abiFilters 'arm64-v8a'
            }
        }
    }
    sourceSets {
        main {
            jni.srcDirs = ['cpp/source']
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            renderscript.srcDirs = ['rs']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    implementation files('xmp.jar')
    compileOnly fileTree(include: ['framework.jar'], dir: 'system_libraries')
    implementation fileTree(include: ['*.so'], dir: 'libs')
    implementation 'com.android.support:support-v4:26+'
    implementation 'com.android.support:support-v13:26+'
    //    implementation "org.bytedeco:javacv:1.4.1"
    //    implementation "org.bytedeco.javacpp-presets:opencv:3.4.1-1.4.1:android-arm"
    implementation project(':openCVLibrary342')
}


repositories {
    jcenter()
        mavenCentral()
        google()
        maven {
            url "https://jitpack.io"
        }
}